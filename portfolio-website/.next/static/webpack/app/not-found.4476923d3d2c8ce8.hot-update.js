"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/not-found",{

/***/ "(app-pages-browser)/./tailwind.config.js":
/*!****************************!*\
  !*** ./tailwind.config.js ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/** @type {import('tailwindcss').Config} */ \nmodule.exports = {\n    content: [\n        \"./src/**/*.{js,ts,jsx,tsx}\"\n    ],\n    darkMode: \"class\",\n    theme: {\n        extend: {\n            fontFamily: {\n                signature: [\n                    \"agustina\",\n                    \"sans-serif\"\n                ],\n                sans: [\n                    \"Inter\",\n                    \"sans-serif\"\n                ],\n                mono: [\n                    \"Roboto Mono\",\n                    \"monospace\"\n                ]\n            },\n            screens: {\n                xs: \"375px\"\n            },\n            colors: {\n                bg: \"var(--color-bg)\",\n                \"bg-secondary\": \"var(--color-bg-secondary)\",\n                accent: \"var(--color-accent)\",\n                \"accent-light\": \"var(--color-accent-light)\",\n                text: \"var(--color-text)\",\n                \"dark-1\": \"var(--color-dark-1)\",\n                \"dark-2\": \"var(--color-dark-2)\",\n                \"dark-3\": \"var(--color-dark-3)\"\n            },\n            transitionTimingFunction: {\n                \"in-scroll\": \"cubic-bezier(0.645, 0.045, 0.355, 1)\"\n            },\n            gridTemplateColumns: {\n                \"auto-300\": \"repeat(auto-fill, minmax(300px, 1fr))\",\n                \"auto-250\": \"repeat(auto-fill, minmax(250px, 1fr))\"\n            },\n            backgroundImage: {\n                torch: \"radial-gradient(525px at 50% 50%, var(--color-accent-torch), transparent 80%)\"\n            }\n        }\n    },\n    plugins: []\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3RhaWx3aW5kLmNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5Q0FBeUM7QUFDekNBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxTQUFTO1FBQUM7S0FBNkI7SUFDdkNDLFVBQVU7SUFDVkMsT0FBTztRQUNMQyxRQUFRO1lBQ05DLFlBQVk7Z0JBQ1ZDLFdBQVc7b0JBQUM7b0JBQVk7aUJBQWE7Z0JBQ3JDQyxNQUFNO29CQUFDO29CQUFTO2lCQUFhO2dCQUM3QkMsTUFBTTtvQkFBQztvQkFBZTtpQkFBWTtZQUNwQztZQUNBQyxTQUFTO2dCQUNQQyxJQUFJO1lBQ047WUFDQUMsUUFBUTtnQkFDTkMsSUFBSTtnQkFDSixnQkFBZ0I7Z0JBQ2hCQyxRQUFRO2dCQUNSLGdCQUFnQjtnQkFDaEJDLE1BQU07Z0JBQ04sVUFBVTtnQkFDVixVQUFVO2dCQUNWLFVBQVU7WUFDWjtZQUNBQywwQkFBMEI7Z0JBQ3hCLGFBQWE7WUFDZjtZQUNBQyxxQkFBcUI7Z0JBQ25CLFlBQVk7Z0JBQ1osWUFBWTtZQUNkO1lBQ0FDLGlCQUFpQjtnQkFDZkMsT0FDRTtZQUNKO1FBQ0Y7SUFDRjtJQUNBQyxTQUFTLEVBQUU7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi90YWlsd2luZC5jb25maWcuanM/YmQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHR5cGUge2ltcG9ydCgndGFpbHdpbmRjc3MnKS5Db25maWd9ICovXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGNvbnRlbnQ6IFsnLi9zcmMvKiovKi57anMsdHMsanN4LHRzeH0nXSxcclxuICBkYXJrTW9kZTogJ2NsYXNzJyxcclxuICB0aGVtZToge1xyXG4gICAgZXh0ZW5kOiB7XHJcbiAgICAgIGZvbnRGYW1pbHk6IHtcclxuICAgICAgICBzaWduYXR1cmU6IFsnYWd1c3RpbmEnLCAnc2Fucy1zZXJpZiddLFxyXG4gICAgICAgIHNhbnM6IFsnSW50ZXInLCAnc2Fucy1zZXJpZiddLFxyXG4gICAgICAgIG1vbm86IFsnUm9ib3RvIE1vbm8nLCAnbW9ub3NwYWNlJ10sXHJcbiAgICAgIH0sXHJcbiAgICAgIHNjcmVlbnM6IHtcclxuICAgICAgICB4czogJzM3NXB4JyxcclxuICAgICAgfSxcclxuICAgICAgY29sb3JzOiB7XHJcbiAgICAgICAgYmc6ICd2YXIoLS1jb2xvci1iZyknLFxyXG4gICAgICAgICdiZy1zZWNvbmRhcnknOiAndmFyKC0tY29sb3ItYmctc2Vjb25kYXJ5KScsXHJcbiAgICAgICAgYWNjZW50OiAndmFyKC0tY29sb3ItYWNjZW50KScsXHJcbiAgICAgICAgJ2FjY2VudC1saWdodCc6ICd2YXIoLS1jb2xvci1hY2NlbnQtbGlnaHQpJyxcclxuICAgICAgICB0ZXh0OiAndmFyKC0tY29sb3ItdGV4dCknLFxyXG4gICAgICAgICdkYXJrLTEnOiAndmFyKC0tY29sb3ItZGFyay0xKScsXHJcbiAgICAgICAgJ2RhcmstMic6ICd2YXIoLS1jb2xvci1kYXJrLTIpJyxcclxuICAgICAgICAnZGFyay0zJzogJ3ZhcigtLWNvbG9yLWRhcmstMyknLFxyXG4gICAgICB9LFxyXG4gICAgICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IHtcclxuICAgICAgICAnaW4tc2Nyb2xsJzogJ2N1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKScsXHJcbiAgICAgIH0sXHJcbiAgICAgIGdyaWRUZW1wbGF0ZUNvbHVtbnM6IHtcclxuICAgICAgICAnYXV0by0zMDAnOiAncmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDMwMHB4LCAxZnIpKScsXHJcbiAgICAgICAgJ2F1dG8tMjUwJzogJ3JlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgyNTBweCwgMWZyKSknLFxyXG4gICAgICB9LFxyXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IHtcclxuICAgICAgICB0b3JjaDpcclxuICAgICAgICAgICdyYWRpYWwtZ3JhZGllbnQoNTI1cHggYXQgNTAlIDUwJSwgdmFyKC0tY29sb3ItYWNjZW50LXRvcmNoKSwgdHJhbnNwYXJlbnQgODAlKScsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgcGx1Z2luczogW10sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY29udGVudCIsImRhcmtNb2RlIiwidGhlbWUiLCJleHRlbmQiLCJmb250RmFtaWx5Iiwic2lnbmF0dXJlIiwic2FucyIsIm1vbm8iLCJzY3JlZW5zIiwieHMiLCJjb2xvcnMiLCJiZyIsImFjY2VudCIsInRleHQiLCJ0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24iLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwiYmFja2dyb3VuZEltYWdlIiwidG9yY2giLCJwbHVnaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./tailwind.config.js\n"));

/***/ })

});